const { PrismaClient } = require('@prisma/client');

async function checkDiscordMetrics() {
  const prisma = new PrismaClient({
    datasources: {
      db: {
        url: 'postgres://neondb_owner:npg_VKJPW8pIfQq0@ep-calm-butterfly-a55pupnn-pooler.us-east-2.aws.neon.tech/neondb?connect_timeout=15&sslmode=require'
      }
    }
  });

  try {
    console.log('üîó PostgreSQLÊé•Á∂öÈñãÂßã...');
    
    // discord_metrics„ÉÜ„Éº„Éñ„É´„ÅÆ„Éá„Éº„ÇøÁ¢∫Ë™ç
    const discordMetrics = await prisma.discord_metrics.findMany({
      orderBy: { createdAt: 'desc' },
      take: 10
    });
    
    console.log(`üìä discord_metrics„ÉÜ„Éº„Éñ„É´: ${discordMetrics.length}‰ª∂„ÅÆ„É¨„Ç≥„Éº„Éâ`);
    
    if (discordMetrics.length > 0) {
      console.log('üìÖ ÊúÄÊñ∞„ÅÆ„Éá„Éº„Çø:');
      discordMetrics.forEach(metric => {
        console.log(`  ${metric.date.toISOString().split('T')[0]}: „É°„É≥„Éê„Éº${metric.memberCount}‰∫∫, „É°„ÉÉ„Çª„Éº„Ç∏${metric.dailyMessages}‰ª∂`);
        console.log(`    ID: ${metric.id}, ‰ΩúÊàêÊó•ÊôÇ: ${metric.createdAt}`);
      });
      
      // ‰ªäÊó•„ÅÆ„Éá„Éº„Çø„Åå„ÅÇ„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
      const today = new Date().toISOString().split('T')[0];
      const todayData = discordMetrics.find(m => m.date.toISOString().split('T')[0] === today);
      console.log(`üìÖ ‰ªäÊó•(${today})„ÅÆ„Éá„Éº„Çø: ${todayData ? 'Â≠òÂú®' : 'Â≠òÂú®„Åó„Å™„ÅÑ'}`);
    } else {
      console.log('‚ùå discord_metrics„ÉÜ„Éº„Éñ„É´„Å´„Éá„Éº„Çø„ÅåÂ≠òÂú®„Åó„Åæ„Åõ„Çì');
    }
    
    // „ÉÜ„Éº„Éñ„É´ÊßãÈÄ†„ÅÆÁ¢∫Ë™ç
    console.log('\nüìã „ÉÜ„Éº„Éñ„É´ÊßãÈÄ†„ÅÆË©≥Á¥∞Á¢∫Ë™ç...');
    
    // ÊâãÂãï„Åß„Çπ„Ç≠„Éº„ÉûÊÉÖÂ†±„ÇíÂèñÂæó
    const tableInfo = await prisma.$queryRaw`
      SELECT column_name, data_type, is_nullable, column_default
      FROM information_schema.columns 
      WHERE table_name = 'discord_metrics'
      ORDER BY ordinal_position
    `;
    
    console.log('üìã discord_metrics„ÅÆ„Ç´„É©„É†:');
    tableInfo.forEach(col => {
      console.log(`  - ${col.column_name}: ${col.data_type} (NULL: ${col.is_nullable}, DEFAULT: ${col.column_default || '„Å™„Åó'})`);
    });
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error.message);
    console.error('Ë©≥Á¥∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkDiscordMetrics();